import javax.swing.event.ChangeListener;
import TicTacToe.UserInterface;
import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.chart.LineChart;
import javafx.scene.chart.NumberAxis;
import javafx.scene.chart.XYChart;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.Slider;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

public class App extends Application {

    @Override
    public void start(Stage arg0) throws Exception { 
        BorderPane layout = new BorderPane();

        // Implements the sliders
        VBox sliders = new VBox();
        BorderPane money = new BorderPane();
        BorderPane interest = new BorderPane();
        Label moneyLabel = new Label("Monthly Savings");
        Label interestLabel = new Label("Yearly interest rate");
        Label moneyValue = new Label();
        Label interestValue = new Label();
        Slider moneySlider = new Slider(25, 250, 25);
        Slider interestSlider = new Slider(0, 10, 0);
        sliders.setSpacing(10);
        moneySlider.setShowTickLabels(true);
        moneySlider.setShowTickMarks(true);
        interestSlider.setShowTickLabels(true);

        //Adds components to border pane
        money.setLeft(moneyLabel);
        money.setCenter(moneySlider);
        money.setRight(moneyValue);
        interest.setLeft(interestLabel);
        interest.setCenter(interestSlider);
        interest.setRight(interestValue);

        // Adds border panes to VBox
        sliders.getChildren().add(money);
        sliders.getChildren().add(interest);
        
        NumberAxis xAxis= new NumberAxis(0, 30, 1);
        NumberAxis yAxis = new NumberAxis();
        int savingsValue = 0;
        LineChart<Number,Number> lineChart = new LineChart(xAxis,yAxis);
        XYChart.Series savingsSeries = new XYChart.Series();
        XYChart.Series savingsWithInterestSeries = new XYChart.Series();
        lineChart.setTitle("Savings Calculator");        
        lineChart.getData().add(savingsSeries);
        lineChart.getData().add(savingsWithInterestSeries);

        moneySlider.valueProperty().addListener((observable, oldvalue, newvalue) -> {
            int savings = newvalue.intValue();
            moneyValue.setText("" + savings);
            updateSavings(moneySlider.getValue(), interestSlider.getValue(), savingsSeries, savingsWithInterestSeries);
        });

        interestSlider.valueProperty().addListener((observable, oldvalue, newvalue) -> {
            interestValue.setText("" + newvalue);
            updateSavings(moneySlider.getValue(), interestSlider.getValue(), savingsSeries, savingsWithInterestSeries);
        });

        // layout of border pane
        layout.setCenter(lineChart);
        layout.setTop(sliders);
        layout.setPadding(new Insets(10, 10, 10, 10));

        // display the line chart
        Scene view = new Scene(layout);
        arg0.setScene(view);
        arg0.show();     
    }

    private void updateSavings(double savings, double interest,  XYChart.Series savingsSeries, XYChart.Series savingsWithInterestSeries) {
        savingsSeries.getData().clear();
        savingsWithInterestSeries.getData().clear();

        savingsSeries.getData().add(new XYChart.Data(0, 0));
        savingsWithInterestSeries.getData().add(new XYChart.Data(0, 0));

        double savs = 0.0;
        double intrs = 0.0;
        double interestPercent = (100 + interest) / 100;

        for (int i = 0; i < 30; i++) {
            savingsSeries.getData().add(new XYChart.Data(i, savs));
            savingsWithInterestSeries.getData().add(new XYChart.Data(i, intrs));

            savs += savings * 12;
            intrs = (savings * 12) + (intrs * interestPercent);
        }
    }

    public static void main(String[] args) {
        launch(App.class);
    }
}
